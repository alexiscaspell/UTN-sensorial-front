[{"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/index.js":"1","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/serviceWorker.js":"2","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/App.js":"3","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/context/LayoutContext.js":"4","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/context/UserContext.js":"5","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/themes/index.js":"6","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/AdminRoutes.js":"7","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/UserRoutes.js":"8","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/api/Api.js":"9","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/themes/default.js":"10","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/login/Login.js":"11","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/error/Error.js":"12","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/styles.js":"13","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Header/Header.js":"14","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/Dashboard.js":"15","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/error/styles.js":"16","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Popups/Notification.js":"17","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/indicadores/Crearindicadores.js":"18","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/UserAvatar/UserAvatar.js":"19","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/objetivos/Crearobjetivos.js":"20","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/selected/SelectedDashboard.js":"21","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/reportes/Reportes.js":"22","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/EmptyDashboards/EmptyDashboards.js":"23","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/BarrasGraph.js":"24","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/Objetives.js":"25","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/BarGraphVertical.js":"26","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/VariacionOnTime.js":"27","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/HistoricChart.js":"28","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/CircularGraph.js":"29","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/GrupalGraphs.js":"30","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/UserAvatar/styles.js":"31","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/reportes/crearreporte/crearreporte.js":"32","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Wrappers/Wrappers.js":"33","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Creartablero/Creartablero.js":"34","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/styles.js":"35","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/PageTitle/PageTitle.js":"36","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Slider/Slider.js":"37","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Table/CheckboxTable.js":"38","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Widget/Widget.js":"39","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/Dot.js":"40","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/NoDashboards/NoDashboards.js":"41","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/SplitButton/SplitButton.js":"42","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Table/styles.js":"43","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Widget/styles.js":"44","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/PageTitle/styles.js":"45","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Header/styles.js":"46","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/login/styles.js":"47","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/SidebarAdmin.js":"48","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Notification/Notification.js":"49","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/usuarios/Usuarios.js":"50","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/tableros/Tableros.js":"51","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/styles.js":"52","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"53","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Notification/styles.js":"54","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/usuarios/crearusuario/crearusuario.js":"55","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/tableros/creartablero/creartablero.js":"56","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/SidebarLink/styles.js":"57","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/utils/utils.js":"58","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/SimpleRadarChart.js":"59","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/CircularGraphCustom.js":"60","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/utils/customhooks.js":"61"},{"size":868,"mtime":1630427733184,"results":"62","hashOfConfig":"63"},{"size":4948,"mtime":1630427733184,"results":"64","hashOfConfig":"63"},{"size":2150,"mtime":1631461442588,"results":"65","hashOfConfig":"63"},{"size":1392,"mtime":1630427733184,"results":"66","hashOfConfig":"63"},{"size":2790,"mtime":1630427733184,"results":"67","hashOfConfig":"63"},{"size":502,"mtime":1630427733184,"results":"68","hashOfConfig":"63"},{"size":1515,"mtime":1630427733184,"results":"69","hashOfConfig":"63"},{"size":1010,"mtime":1630427733184,"results":"70","hashOfConfig":"63"},{"size":8025,"mtime":1631499304418,"results":"71","hashOfConfig":"63"},{"size":2987,"mtime":1630427733184,"results":"72","hashOfConfig":"63"},{"size":4835,"mtime":1630427733184,"results":"73","hashOfConfig":"63"},{"size":1571,"mtime":1630427733184,"results":"74","hashOfConfig":"63"},{"size":608,"mtime":1630427733184,"results":"75","hashOfConfig":"63"},{"size":7298,"mtime":1630427733172,"results":"76","hashOfConfig":"63"},{"size":8576,"mtime":1630427733184,"results":"77","hashOfConfig":"63"},{"size":1334,"mtime":1630427733184,"results":"78","hashOfConfig":"63"},{"size":1647,"mtime":1630427733176,"results":"79","hashOfConfig":"63"},{"size":8161,"mtime":1631482001070,"results":"80","hashOfConfig":"63"},{"size":593,"mtime":1630427733184,"results":"81","hashOfConfig":"63"},{"size":8071,"mtime":1631465781411,"results":"82","hashOfConfig":"63"},{"size":3382,"mtime":1631378149637,"results":"83","hashOfConfig":"63"},{"size":3259,"mtime":1630427733184,"results":"84","hashOfConfig":"63"},{"size":485,"mtime":1630427733172,"results":"85","hashOfConfig":"63"},{"size":2672,"mtime":1631371533384,"results":"86","hashOfConfig":"63"},{"size":476,"mtime":1631500091909,"results":"87","hashOfConfig":"63"},{"size":3301,"mtime":1631371523604,"results":"88","hashOfConfig":"63"},{"size":5645,"mtime":1631503515651,"results":"89","hashOfConfig":"63"},{"size":7230,"mtime":1631506222575,"results":"90","hashOfConfig":"63"},{"size":5585,"mtime":1631410893083,"results":"91","hashOfConfig":"63"},{"size":3553,"mtime":1631067172806,"results":"92","hashOfConfig":"63"},{"size":276,"mtime":1630427733184,"results":"93","hashOfConfig":"63"},{"size":8201,"mtime":1630427733184,"results":"94","hashOfConfig":"63"},{"size":3846,"mtime":1630427733184,"results":"95","hashOfConfig":"63"},{"size":3722,"mtime":1630427733172,"results":"96","hashOfConfig":"63"},{"size":3379,"mtime":1631240471574,"results":"97","hashOfConfig":"63"},{"size":442,"mtime":1630427733176,"results":"98","hashOfConfig":"63"},{"size":1726,"mtime":1630427733184,"results":"99","hashOfConfig":"63"},{"size":12360,"mtime":1631499991595,"results":"100","hashOfConfig":"63"},{"size":3973,"mtime":1631369773898,"results":"101","hashOfConfig":"63"},{"size":862,"mtime":1630427733176,"results":"102","hashOfConfig":"63"},{"size":972,"mtime":1630427733176,"results":"103","hashOfConfig":"63"},{"size":3070,"mtime":1630427733184,"results":"104","hashOfConfig":"63"},{"size":2956,"mtime":1631468198173,"results":"105","hashOfConfig":"63"},{"size":969,"mtime":1630427733184,"results":"106","hashOfConfig":"63"},{"size":462,"mtime":1630427733176,"results":"107","hashOfConfig":"63"},{"size":3868,"mtime":1630427733176,"results":"108","hashOfConfig":"63"},{"size":3133,"mtime":1630427733184,"results":"109","hashOfConfig":"63"},{"size":4595,"mtime":1630427733176,"results":"110","hashOfConfig":"63"},{"size":3296,"mtime":1630427733176,"results":"111","hashOfConfig":"63"},{"size":3451,"mtime":1630427733184,"results":"112","hashOfConfig":"63"},{"size":3739,"mtime":1630427733184,"results":"113","hashOfConfig":"63"},{"size":1304,"mtime":1630427733184,"results":"114","hashOfConfig":"63"},{"size":4411,"mtime":1630427733184,"results":"115","hashOfConfig":"63"},{"size":993,"mtime":1630427733176,"results":"116","hashOfConfig":"63"},{"size":6347,"mtime":1630427733184,"results":"117","hashOfConfig":"63"},{"size":4072,"mtime":1630427733184,"results":"118","hashOfConfig":"63"},{"size":1412,"mtime":1630427733184,"results":"119","hashOfConfig":"63"},{"size":3618,"mtime":1631505267910,"results":"120","hashOfConfig":"63"},{"size":3486,"mtime":1631240818854,"results":"121","hashOfConfig":"63"},{"size":5651,"mtime":1631247746499,"results":"122","hashOfConfig":"63"},{"size":429,"mtime":1631499646008,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"p231t4",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"126"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"126"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"126"},"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/index.js",[],["269","270"],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/serviceWorker.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/App.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/context/LayoutContext.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/context/UserContext.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/themes/index.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/AdminRoutes.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/UserRoutes.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/api/Api.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/themes/default.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/login/Login.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/error/Error.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/routes/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Header/Header.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/Dashboard.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/error/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Popups/Notification.js",["271","272","273","274"],"import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Notification(props) {\n    const position = {\n        vertical: 'top',\n        horizontal: 'center',\n      };\n    const { vertical, horizontal } = position;\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotifiaction(false);\n  };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        },\n    }));\n    const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={props.notification} onClose={handleClose} anchorOrigin={{ vertical, horizontal }}\n>\n        <Alert onClose={handleClose} autoHideDuration={6000} severity={props.severity}>\n          {props.notificationMsg}\n        </Alert>\n\n      </Snackbar>\n      {\n        /*<Alert severity=\"error\">This is an error message!</Alert>\n        <Alert severity=\"warning\">This is a warning message!</Alert>\n        <Alert severity=\"info\">This is an information message!</Alert>\n        <Alert severity=\"success\">This is a success message!</Alert>*/\n      }\n    </div>\n  );\n}\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/indicadores/Crearindicadores.js",["275","276","277","278","279","280","281","282","283"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Select,\n    Chip,\n    Input,\n    Box,\n} from \"@material-ui/core\";\nimport {getSensores, saveIndicator} from '../../../../api/Api'\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst tipos = [\n  {\n    value: 'produccion',\n    label: 'Producción',\n  },\n  {\n    value: 'temperatura',\n    label: 'Temperatura',\n  },\n  {\n    value: 'humedad',\n    label: 'Humedad',\n  },\n  {\n    value: 'calidad_del_aire',\n    label: 'Calidad del aire',\n  },\n]\n\nconst limites = [\n  {\n    value: '0',\n    label: 'Superior',\n  },\n  {\n    value: '1',\n    label: 'Inferior',\n  },\n  {\n    value: '2',\n    label: 'Ambos',\n  },\n]\n\nexport default function SimpleModal(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [nombre, setNombre] = React.useState();\n  const [tipoIndicador, setTipoIndicador] = React.useState();\n  const [sensors, setSensors] = React.useState([]);\n  const [selectedSensors, setSelectedSensors] = React.useState([]);\n  const [sensorsId, setSensorsIds] = React.useState([]);\n  const [disable, setDisabled] = React.useState(true);\n  const [inferior, setInferior] = React.useState();\n  const [superior, setSuperior] = React.useState();\n\n\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleTipoChange = function(e) {\n    setSelectedSensors([])\n    setSensorsIds([])\n    setTipoIndicador(e.target.value);\n  }\n\n  const handleChange = (e) => {\n    console.log(e.target.value)\n    setSelectedSensors(e.target.value);\n  };\n\n  const handleDisable = () => {\n    console.log(selectedSensors)\n    if (!!nombre && !!tipoIndicador && !(selectedSensors.length === 0) && (!!superior || !!inferior)){\n        setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  const handleLimiteSuperior = (e) => {\n    setSuperior(e.target.value)\n  }\n\n  const handleLimiteInferior = (e) => {\n    setInferior(e.target.value)\n  }\n\n  const handleClose = () => {\n    setNombre(\"\")\n    setSelectedSensors([])\n    setSensorsIds([])\n    setTipoIndicador(\"\")\n    props.handleClose()\n  };\n\n  const handleCreate = async () => {\n    let sensorNames = await Promise.all(sensors.map(sensor => sensor.nombre))\n    let indexArr = await Promise.all(selectedSensors.map(sensorName => sensorNames.indexOf(sensorName)))\n    let arrSelectedSensorIds = await Promise.all(indexArr.map(index => sensors[index])\n    )\n\n    let newIndicator = {\n      name: nombre,\n      type: tipoIndicador,\n      sensors: arrSelectedSensorIds,\n      limitInferior: inferior,\n      limitSuperior: superior\n    }\n\n    let res = await saveIndicator(props.dashboardId,newIndicator)\n    if(res.ok){\n      props.handleNewNotification(\"Indicador creado exitosamente\",\"success\")\n      const data = await res.json()\n      console.log(data)\n      props.addNewIndicator(data)\n      handleClose()\n    } else {\n      props.handleNewNotification(\"No se pudo crear el indicador\",\"error\")\n    }    \n  };\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n  },[]);\n\n  const handleFetchSensores = async () => {\n    let res = await getSensores(tipoIndicador);\n    if (res.ok){\n      let data = await res.json();\n      console.log(data)\n\n      setSensors(data)\n      //setSensorsIds(sensorsIds)\n    }\n  }\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function fetchSensores(){\n      if(!!tipoIndicador)\n        await handleFetchSensores()\n\n    }\n    fetchSensores();\n\n  },[tipoIndicador]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n\n  },[nombre,tipoIndicador,selectedSensors,superior,inferior]);\n\n  return (\n    <div>\n      <Dialog open={props.isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo Indicador</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            id=\"outlined-select\"\n            margin=\"dense\"\n            select\n            label=\"Tipo de indicador\"\n            fullWidth\n            onChange={handleTipoChange}\n          >\n            {\n              tipos.map((option, index) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))\n            }\n          </TextField>\n          <FormControl fullWidth className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-chip-label\">Sensores</InputLabel>\n            <Select\n              labelId=\"demo-mutiple-chip-label\"\n              id=\"demo-mutiple-chip\"\n              multiple\n              fullWidth\n              value={selectedSensors}\n              onChange={handleChange}\n              input={<Input id=\"select-multiple-chip\"/>}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value, index) => (\n                    <Chip key={value} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}\n            >\n              {\n                sensors.map((sensor, index) => (\n                  <MenuItem key={index} value={sensor.nombre} /*style={getStyles(sensor.nombre, sensors, theme)}*/>\n                    {sensor.nombre}\n                  </MenuItem>\n                ))\n              }\n            </Select>\n\n          </FormControl>\n          <Box justifyContent=\"space-between\">\n          <TextField\n              id=\"outlined-select\"\n              type=\"number\"\n              margin=\"dense\"\n              label=\"Limite superior\"\n              onChange={handleLimiteSuperior}\n              >\n              </TextField>\n              &nbsp;&nbsp;&nbsp;\n              <TextField\n              id=\"outlined-select\"\n              type=\"number\"\n              margin=\"dense\"\n              label=\"Limite inferior\"\n              onChange={handleLimiteInferior}\n              >\n              </TextField>\n          </Box>\n              \n         \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/UserAvatar/UserAvatar.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/objetivos/Crearobjetivos.js",["284","285","286","287","288","289"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText,\n    MenuItem,\n    Grid,\n    InputAdornment,\n} from \"@material-ui/core\";\nimport {saveObjetivo, deleteObjetivo} from '../../../../api/Api';\nimport clsx from 'clsx';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(0),\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(2),\n      width: 200,\n    },\n  })\n);\n\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [disable, setDisabled] = React.useState(true);\n  const [nombre, setNombre] = React.useState();\n  const [description, setDescription] = React.useState();\n  const [objValue, setObjValue] = React.useState(0);\n  const [indicadorInd, setIndicadorInd] = React.useState();\n  const [startDate, setStartDate] = React.useState();\n  const [endDate, setEndDate] = React.useState();\n  const [endTime, setEndTime] = React.useState();\n  const [startTime, setStartTime] = React.useState();\n\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e.target.value);\n  };\n\n  const handleStartTimeChange = (e) => {\n    setStartTime(e.target.value);\n  };\n\n  const handleEndDateChange = (e) => {\n    setEndDate(e.target.value);\n  };\n\n  const handleEndTimeChange = (e) => {\n    setEndTime(e.target.value);\n  };\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleDescChange = function(e) {\n    setDescription(e.target.value);\n  }\n\n  const handleChangeObjetive = function(e) {\n    console.log(e.target.value)\n    setIndicadorInd(e.target.value);\n  }\n\n  const handleObjetiveValue = function(e) {\n    if (e.target.value>100){\n      setObjValue(100)\n    } else if (e.target.value<1) {\n      setObjValue(0)\n    } else {\n      setObjValue(e.target.value);\n    }\n  }\n\n  const handleDisable = () => {\n    let starDat = startDate ?? \"\"\n    let starTim = startTime ?? \"\"\n\n    console.log(props.actualBoardInd.length>0)\n    console.log(nombre)\n    console.log(description)\n    console.log(objValue)\n    console.log(endTime)\n    console.log(endDate)\n    console.log(starTim)\n    console.log(starDat)\n\n    if (props.actualBoardInd.length>0 && !!nombre && !!description && objValue>0 && endTime && !!endDate && `${endDate} ${endTime}`>`${starDat} ${starTim}`){\n      setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  const handleClose = () => {\n    setDescription(\"\")\n    setNombre(\"\")\n    setObjValue(0)\n    setStartDate(\"\")\n    setStartTime(\"\")\n    setEndDate(\"\")\n    setEndTime(\"\")\n    setIndicadorInd(null)\n    props.handleClose()  \n  };\n\n  const handleCreate = async () => {\n    let newObj = {\n      name: nombre,\n      description: description,\n      value: objValue,\n      startDate: (!!startDate && !!startTime ) ? new Date(`${startDate}T${startTime}`) : new Date(Date.now()),\n      endDate: new Date(`${endDate}T${endTime}`),\n      indicatorName: props.actualBoardInd[indicadorInd].name,\n      indicatorId: props.actualBoardInd[indicadorInd]._id,\n    }\n  \n    let res = await saveObjetivo(props.dashboardId,newObj)\n    if (res.ok){\n      props.handleNewNotification(\"Objetivo creado exitosamente\",\"success\")\n      const data = await res.json()\n      props.addNewObjetive(data)\n      handleClose()\n    } else {\n    }\n  \n  };\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n\n  },[]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n\n  },[description,nombre,objValue,endDate,startDate,endTime,startTime]);\n\n  return (\n\n    <div>\n      <Dialog open={props.isOpen} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo objetivo</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Descripción\"\n            type=\"description\"\n            fullWidth\n            onChange={handleDescChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            select\n            label=\"Indicador\"\n            value={indicadorInd}\n            fullWidth\n            onChange={handleChangeObjetive}\n          >\n            {\n              props.actualBoardInd.map((obj, index) => (\n                <MenuItem key={obj._id} value={index}>\n                  {obj.name}\n                </MenuItem>\n              ))\n            }\n          </TextField>\n          <TextField\n            id=\"datetime-localinit\"\n            label=\"Fecha inicial\"\n            type=\"date\"\n            defaultValue=\"\"\n            format=\"dd/MM/yyyy\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={handleStartDateChange}\n          />\n            <TextField\n              id=\"time\"\n              label=\"Hora incial\"\n              type=\"time\"\n              defaultValue=\"\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                step: 300, // 5 min\n              }}\n              onChange={handleStartTimeChange}\n            />\n        <TextField\n          id=\"datetime-localend\"\n          label=\"Fecha final\"\n          type=\"date\"\n          defaultValue=\"\"\n          format=\"dd/MM/yyyy\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={handleEndDateChange}\n        />\n        <TextField\n          id=\"time\"\n          label=\"Hora final\"\n          type=\"time\"\n          defaultValue=\"\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300, // 5 min\n          }}\n          onChange={handleEndTimeChange}\n        />\n          <TextField\n            label=\"Valor del objetivo\"\n            id=\"standard-start-adornment\"\n            type=\"number\"\n            value={objValue}\n            defaultValue={100}\n            className={clsx(classes.margin, classes.textField)}\n            InputProps={{\n              inputProps: { min: 0, max: 100 },\n              startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n            }}\n            onChange={handleObjetiveValue}\n          />\n        </DialogContent>\n        \n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/selected/SelectedDashboard.js",["290","291"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\n// styles\n\n// components\nimport VariacionOntime from \"../../../../components/Graphs/VariacionOnTime\";\nimport VerticalBar from \"../../../../components/Graphs/BarGraphVertical\";\nimport BarrasChar from \"../../../../components/Graphs/BarrasGraph\";\nimport GrupalGraphs from \"../../../../components/Graphs/GrupalGraphs\";\nimport SimpleRadarChart from \"../../../../components/Graphs/SimpleRadarChart\";\nimport HistoricalChart from \"../../../../components/Graphs/HistoricChart\";\nimport ObjetiveChart from \"../../../../components/Graphs/Objetives\";\nimport EmptyDashboard from \"../../../../components/EmptyDashboards/EmptyDashboards\";\nimport CircularGraph from \"../../../../components/Graphs/CircularGraph\";\n\nimport CircularGraphCustom from \"../../../../components/Graphs/CircularGraphCustom\";\nimport { useUserState } from \"../../../../context/UserContext\";\n\n\nexport default function SelectedDashboard(props) {\n  var { isAdmin } = useUserState();\n\n  var [historic, setHistoric] = useState(false);\n  var [historicIndicator, setHistoricIndicator] = useState()\n\n  //useEfect cuando haya un nuevo indicador y luego se agrega a indicators para que refresque\n\n\n  function GraphPerType(indicator) {\n    if (indicator.sensors.length===1){\n      return <VariacionOntime atualBoardId={props.atualBoardId} setHistoric={setHistoric} setHistoricIndicator={setHistoricIndicator} handleDeleteIndicator={props.handleDeleteIndicator} indicator={indicator}/>\n    } else {\n      switch (indicator.type) {\n        case \"produccion\":\n          return <CircularGraph atualBoardId={props.atualBoardId} setHistoric={setHistoric} setHistoricIndicator={setHistoricIndicator} handleDeleteIndicator={props.handleDeleteIndicator} indicator={indicator}/>\n        case \"humedad\":\n          return <BarrasChar atualBoardId={props.atualBoardId} setHistoric={setHistoric} setHistoricIndicator={setHistoricIndicator}  handleDeleteIndicator={props.handleDeleteIndicator} indicator={indicator}/>\n        case \"temperatura\":\n          return <GrupalGraphs atualBoardId={props.atualBoardId} setHistoric={setHistoric} setHistoricIndicator={setHistoricIndicator} handleDeleteIndicator={props.handleDeleteIndicator} indicator={indicator}/>\n        case \"calidad_del_aire\":\n          return <VerticalBar atualBoardId={props.atualBoardId} setHistoric={setHistoric} setHistoricIndicator={setHistoricIndicator} handleDeleteIndicator={props.handleDeleteIndicator} indicator={indicator}/>\n\n        default:\n      }\n    }\n\n  }\n \n  return (\n    <>\n      {\n        \n      <div>\n\n        {\n          props.actualBoardData?.indicators.length===0 && <EmptyDashboard/>\n        }\n        <Grid container spacing={4}>\n          {\n            !!props.actualBoardData?.indicators.length>0 && props.actualBoardData.indicators.map((indicator, index) => GraphPerType(indicator))\n          }\n          { \n            historic && <HistoricalChart setHistoric={setHistoric} isOpen={historic} historicIndicator={historicIndicator} atualBoardId={props.atualBoardId}/>\n          }\n          {\n            props.actualBoardData.objetives.length>0 && <ObjetiveChart isAdmin={isAdmin} objetives={props.actualBoardData.objetives} atualBoardId={props.atualBoardId} handleDeleteObjetive={props.handleDeleteObjetive}/>\n          }\n        </Grid>\n      </div>\n    }\n    </>\n  );\n}\n\n\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/reportes/Reportes.js",["292"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Box, CircularProgress } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { getAllReportes, getAllUsersData, deleteReport } from \"../../../../api/Api\"\nimport SimpleModal from './crearreporte/crearreporte'\n\n\nexport default function Informes(props) {\n\n  var [reportList, setReportsData] = useState([]);\n  var [isLoading, setIsLoading] = useState(true);\n  var [destinatarios, setDestinarios] = useState();\n\n\n  async function fetchDashboardReports() {\n    try {\n      const res = await getAllReportes(props.dashboardId)\n      const {data} = await res.json()\n      if (!!data) {\n        setReportsData(data)\n      }\n      setIsLoading(false)\n    } catch(error) {\n      console.log(error)\n    }\n\n  }\n\n  async function fetchDests() {\n    const res = await getAllUsersData()\n    const {data} = await res.json()\n    if (!!data) {\n      let dest = []\n      for (let user of data){\n        dest.push(user[0])\n      }\n      setDestinarios(dest)\n    }\n  }\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialReports(){\n      await fetchDashboardReports()\n      await fetchDests()\n    }\n    getInitialReports();\n\n  },[]);\n\n  async function handleDeleteReports(reportsToDelete) {\n    try {\n      var reportsIndex = await Promise.all(reportsToDelete.map(item => item.index))\n      var reportsIds = await Promise.all(reportsIndex.map(index => reportList[index][5]))\n      await Promise.all(reportsIds.map(reportId => deleteReport(props.dashboardId,reportId)))\n\n      var filtered = reportList.filter(function(value,index){\n        return !reportsIndex.includes(index)\n      })\n      props.handleNewNotification(\"Reporte borrado exitosamente\",\"success\")\n\n      setReportsData(filtered)\n\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      {\n        isLoading ? \n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '80vh' }}\n        >\n        <Grid item xs={3}>\n          <CircularProgress size={100}/>\n        </Grid>   \n      </Grid> :\n      <div>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              title={\n                    <Box display=\"flex\" justifyContent=\"flex-start\" m={0} p={0} >\n                      {!!destinatarios && <SimpleModal handleNewNotification={props.handleNewNotification} reportList={reportList} setReportsData={setReportsData} dashboardId={props.dashboardId} destinatarios={destinatarios}/>}\n                    </Box>\n                    }\n              data={reportList}\n              columns={[\"Nombre\", \"Descripcion\", \"Destinatarios\", \"Dia\", \"Horario (Hs)\"]}\n              options={{\n                filterType: \"checkbox\",\n                print: false,\n                download: false,\n                viewColumns: false,\n                onRowsDelete: (rowsDeleted, newTableData) => {  \n                  return handleDeleteReports(rowsDeleted.data)\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n\n      </div>\n    }\n    </>\n  );\n}\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/EmptyDashboards/EmptyDashboards.js",["293","294"],"import React from \"react\";\nimport {\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport SimpleModal from \"../Creartablero/Creartablero\"\n\nexport default function EmptyDashboard(props) {\n\n\n  return (\n    <>        \n        <Box display=\"flex\" justifyContent=\"center\" m={0} p={30}>\n          <Box p={0} >\n            <PageTitle title=\"El tablero esta vacío, comenzá creando un indicador.\"/>\n          </Box>\n        </Box>\n    </>\n  );\n}\n\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/BarrasGraph.js",["295"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport Dot from \"../Sidebar/components/Dot\";\n\nimport useStyles from \"./styles\";\nimport {handleProgressColor} from \"../../utils/utils\"\n\n// components\n\nimport Widget from \"../Widget/Widget\";\nimport { Typography } from \"../Wrappers/Wrappers\";\nimport {getIndicatorData} from '../../api/Api'\n\n\nexport default function BarrasChar(props) {\n    var classes = useStyles();\n    var theme = useTheme();\n    const [sensData, setData] = useState();\n    \n    const handleDeleteIndicator = () => {\n      props.handleDeleteIndicator(props.indicator._id)\n    }\n\n    const handleSetHistoric = () => {\n      props.setHistoricIndicator(props.indicator)\n      props.setHistoric(true)\n    }\n\n    const handleFetchIndicatorData = async (muestras) => {\n      let res = await getIndicatorData(props.atualBoardId,props.indicator._id,muestras)\n        if (res.ok){\n\n          let data = await res.json()\n          setData(data)\n        }    \n    }\n\n    useEffect(() => { \n      async function getInitialData(){\n          await handleFetchIndicatorData(1)\n      }\n      getInitialData();\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    \n    return (\n\n        <Grid item lg={3} md={6} sm={6} xs={12}>\n        <Widget\n          handleDeleteIndicator={handleDeleteIndicator}\n          setHistoric={handleSetHistoric}\n          title={props.indicator.name}\n          upperTitle\n          className={classes.card}\n          bodyClass={classes.fullHeightBody}\n        >\n          <Grid container spacing={1} alignItems=\"center\" direction=\"row\" justifyContent=\"center\">\n            {!!sensData && sensData.map( data => MulipleIndicator(props.indicator,data,classes,theme))}\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n    }\n\n\n    function MulipleIndicator(indicator,sensorData,classes) {\n      return  <Grid item xs={12}>\n                <Typography\n                  size=\"sx\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.progressSectionTitle}\n                >\n                  {!!sensorData ? `${sensorData.id_sensor} ${sensorData.valores[0]?.valor}%` : \"-%\"}\n                </Typography>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={sensorData.valores[0]?.valor}\n                  classes={{ barColorPrimary: handleProgressColor(classes,indicator,sensorData.valores[0]?.valor) }}\n                  className={classes.progress}\n                />\n              </Grid>\n     }","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/Objetives.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/BarGraphVertical.js",["296","297","298","299","300","301"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell, Legend, ReferenceLine } from 'recharts';\n\n// styles\nimport useStyles from \"./styles\";\nimport {getIndicatorData} from '../../api/Api'\nimport {formatData} from '../../utils/utils'\n\n// components\n\nimport Dot from \"../Sidebar/components/Dot\";\nimport Widget from \"../Widget/Widget\";\nimport { Typography } from \"../Wrappers/Wrappers\";\nimport {handleLineColor} from \"../../utils/utils\"\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    female: {\n      asd: 1234\n    },\n    male: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    female: 1398,\n    male: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    female: 9800,\n    male: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    female: 3908,\n    male: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    female: 4800,\n    male: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    female: 3800,\n    male: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    female: 4300,\n    male: 2100,\n  },\n];\n\nexport default function VerticalBar(props) {\n    var classes = useStyles();\n    var theme = useTheme();\n    const [sensData, setData] = useState();\n\n    const handleDeleteIndicator = () => {\n      props.handleDeleteIndicator(props.indicator._id)\n    }\n\n    const handleSetHistoric = () => {\n      props.setHistoricIndicator(props.indicator)\n      props.setHistoric(true)\n    }\n\n    const handleFetchIndicatorData = async () => {\n      let res = await getIndicatorData(props.atualBoardId,props.indicator._id,1)\n      if (res.ok){\n        let data = await res.json()\n        let formated = await formatData(data, theme, props)\n        setData(formated)\n      }   \n    }\n\n    useEffect(() => { \n      async function getInitialData(){\n        await handleFetchIndicatorData()\n      }\n      getInitialData();\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    \n    const max = 3000\n\n    return (\n    <Grid item lg={3} md={6} sm={6} xs={12}>\n      <Widget \n        title={props.indicator.name}\n        upperTitle \n        className={classes.card}\n        setHistoric={handleSetHistoric}\n        handleDeleteIndicator={handleDeleteIndicator}\n        >\n        <BarChart\n              width={325}\n              height={175}\n              data={sensData}\n              margin={{\n                top: 5,\n                right: 0,\n                left: 0,\n                bottom: 0,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis hide={true} dataKey=\"sensId\" />\n              <YAxis hide={false} />\n              <Tooltip isAnimationActive={false}/>\n              {!!sensData && <Bar dataKey=\"value\" fill=\"\" label={{ position: 'bottom' }}>\n                {sensData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Bar>}\n              {!!props.indicator.limitSuperior && <ReferenceLine y={props.indicator.limitSuperior} isFront={true} /*label={`${props.indicator.limitSuperior}`}*/ stroke=\"red\" strokeDasharray=\"3 3\"/>}\n        </BarChart>\n      </Widget>\n    </Grid>\n    );\n}\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/VariacionOnTime.js",["302","303","304"],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/HistoricChart.js",["305","306","307","308","309"],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/CircularGraph.js",["310","311","312","313"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Tooltip\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\nimport {getIndicatorData} from '../../api/Api'\nimport {handleLineColor} from \"../../utils/utils\"\nimport {formatData} from '../../utils/utils'\n\n// components\n\nimport Dot from \"../Sidebar/components/Dot\";\nimport Widget from \"../Widget/Widget\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  {\n    \"id_sensor\": \"611b57e1113636bf060a9c2a\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"06:32:01\",\n        \"valor\": 700\n      },\n    ]\n  },\n  {\n    \"id_sensor\": \"6133e17bb8248d4e9bf7d8a6\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"06:32:01\",\n        \"valor\": 550\n      },\n    ]\n  },\n  {\n    \"id_sensor\": \"6133e195b8248d4e9bf7d8a7\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"06:32:01\",\n        \"valor\": 50\n      },\n    ]\n  }\n]\n\nexport default function CircularGraph(props) {\n    var classes = useStyles();\n    var theme = useTheme();\n    var [sensData, setData] = useState();\n\n    const handleDeleteIndicator = () => {\n      props.handleDeleteIndicator(props.indicator._id)\n    }\n\n    const handleSetHistoric = () => {\n      props.setHistoricIndicator(props.indicator)\n      props.setHistoric(true)\n    }\n\n    const handleFetchIndicatorData = async () => {\n      let res = await getIndicatorData(props.atualBoardId,props.indicator._id,1)\n      if (res.ok){\n        //let data = await res.json()\n        console.log(PieChartData)\n        console.log(props.indicator)\n        let formated = await formatData(PieChartData, theme, props)\n        console.log(formated)\n        setData(formated)\n      }\n    }\n\n    useEffect(() => { \n      async function getInitialData(){\n          await handleFetchIndicatorData()\n      }\n      getInitialData();\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    \n    return (\n    <Grid item lg={3} md={4} sm={6} xs={12}>\n      <Widget \n        title={props.indicator.name}\n        upperTitle \n        className={classes.card}\n        setHistoric={handleSetHistoric}\n        handleDeleteIndicator={handleDeleteIndicator}\n        >\n        <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <ResponsiveContainer width=\"100%\" height={144}>\n              <PieChart>\n                <Pie\n                  data={sensData}\n                  innerRadius={0}\n                  outerRadius={60}\n                  dataKey=\"value\"\n                >\n                  {!!sensData && sensData.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={entry.color}\n                    />\n                  ))}\n                </Pie>\n                <Tooltip content={<CustomTooltip />} isAnimationActive={true}/>\n              </PieChart>\n            </ResponsiveContainer>\n          </Grid>\n        </Grid>\n      </Widget>\n    </Grid>\n    );\n}\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      \n        <Paper variant=\"outlined\" >\n          <Grid   container\n            spacing={1}\n            direction=\"column\"\n            justifyContent=\"space-between\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              <Typography variant=\"h11\" color=\"textSecondary\" noWrap>\n                {payload[0].payload.sensId}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography color=\"textPrimary\" noWrap>\n                {`${payload[0].payload.fecha}`}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography color={`${payload[0].payload.color}`} noWrap>\n                {`value : ${payload[0].payload.value}`}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n    );\n  }\n\n  return null;\n};\n\n    function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n        var array = new Array(length).fill();\n        let lastValue;\n      \n        return array.map((item, index) => {\n          let randomValue = Math.floor(Math.random() * multiplier + 1);\n      \n          while (\n            randomValue <= min ||\n            randomValue >= max ||\n            (lastValue && randomValue - lastValue > maxDiff)\n          ) {\n            randomValue = Math.floor(Math.random() * multiplier + 1);\n          }\n      \n          lastValue = randomValue;\n      \n          return { value: randomValue };\n        });\n      }\n      \n\n      function getMainChartData() {\n        var resultArray = [];\n        var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n        var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n        var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n      \n        for (let i = 0; i < tablet.length; i++) {\n          resultArray.push({\n            tablet: tablet[i].value,\n            desktop: desktop[i].value,\n            mobile: mobile[i].value,\n          });\n        }\n      \n        return resultArray;\n      }\n\n      function CustomizedLabel(props) {\n          const { x, y, stroke, value } = props;\n          return (\n            <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\n              {value}\n            </text>\n          );\n      }","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/GrupalGraphs.js",["314","315","316","317"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n    Area,\n    AreaChart,\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    Tooltip,\n    XAxis,\n    ReferenceLine,\n    CartesianGrid,\n} from \"recharts\";\nimport useStyles from \"./styles\";\nimport {handleLineColor} from \"../../utils/utils\"\n\n// components\n\nimport Widget from \"../Widget/Widget\";\nimport { Typography } from \"../Wrappers/Wrappers\";\nimport { LocalPrintshopSharp } from \"@material-ui/icons\";\nimport {getIndicatorData} from '../../api/Api'\n\n\n\n\nexport default function BarrasChar(props) {\n    var classes = useStyles();\n    var theme = useTheme();\n    var [sensData, setData] = useState();\n\n        //var { isAdmin } = useUserState();\n    \n      const handleDeleteIndicator = () => {\n        props.handleDeleteIndicator(props.indicator._id)\n      }\n  \n      const handleSetHistoric = () => {\n        props.setHistoricIndicator(props.indicator)\n        props.setHistoric(true)\n      }\n\n    const handleFetchIndicatorData = async () => {\n      let res = await getIndicatorData(props.atualBoardId,props.indicator._id,8)\n      console.log(res)\n        if (res.ok){\n\n          let data = await res.json()\n          console.log(data)\n          setData(data)\n        }    \n    }\n\n    useEffect(() => { \n      async function getInitialData(){\n          await handleFetchIndicatorData()\n      }\n      getInitialData();\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n    return (\n\n        <Grid item lg={3} md={6} sm={6} xs={12}>\n          <Widget\n            title={props.indicator.name}\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n            setHistoric={handleSetHistoric}\n            handleDeleteIndicator={handleDeleteIndicator}\n          >\n            {!!sensData && sensData.map( data => MulipleIndicator(props.indicator,data,classes,theme))}\n          </Widget>\n        </Grid>\n    );\n\n}\n\n    function MulipleIndicator(indicator,sensorData,classes,theme) {\n     return  <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                {sensorData.id_sensor}\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                <LineChart \n                  data={sensorData.valores}\n                >\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"valor\"\n                      stroke={handleLineColor(theme,indicator,sensorData.valores[sensorData.valores.length-1]?.valor)}\n                      strokeWidth={3}\n                      dot={false}\n                    />\n                    <XAxis hide={true} dataKey=\"fecha\" />\n                    <Tooltip isAnimationActive={false}/>\n\n                    {!!indicator.limitSuperior && <ReferenceLine y={indicator.limitSuperior} label={`${indicator.limitSuperior}`} stroke=\"red\" strokeDasharray=\"3 3\"/>}\n                    {!!indicator.limitInferior && <ReferenceLine y={indicator.limitInferior} label={`${indicator.limitInferior}`} stroke=\"red\" strokeDasharray=\"3 3\"/>}\n \n                  </LineChart>\n\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n    }\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/UserAvatar/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/dashboard/reportes/crearreporte/crearreporte.js",["318","319","320","321"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {saveReport, getAllUsersData} from '../../../../../api/Api'\nimport Chip from '@material-ui/core/Chip';\n\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Select,\n    Input,\n    \n} from \"@material-ui/core\";\n\nconst ITEM_HEIGHT = 32;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n    formControl: {\n      marginLeft: theme.spacing(0),\n      marginRight: theme.spacing(0),\n      marginTop: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(0),\n      marginTop: theme.spacing(1),\n      width: 200,\n      minWidth: 120,\n      maxWidth: 300,\n    },\n  })\n);\n\nconst days = [\n  {\n    value: 'Lunes',\n    label: 'Lunes',\n  },\n  {\n    value: 'Martes',\n    label: 'Martes',\n  },\n  {\n    value: 'Miércoles',\n    label: 'Miércoles',\n  },\n  {\n    value: 'Jueves',\n    label: 'Jueves',\n  },\n  {\n    value: 'Viernes',\n    label: 'Viernes',\n  },\n  {\n    value: 'Sábado',\n    label: 'Sábado',\n  },\n  {\n    value: 'Domingo',\n    label: 'Domingo',\n  }]\n\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [nombre, setNombre] = React.useState();\n  const [descripcion, setDescriptcion] = React.useState();\n  const [destinatarios, setDestinatarios] = React.useState([]);\n  const [dia, setDia] = React.useState();\n  const [horario, setHorario] = React.useState();\n  const [disable, setDisabled] = React.useState(true);\n\n  const theme = useTheme();\n\n  const handleChange = (e) => {\n    setDestinatarios(e.target.value);\n  };\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleDescriptionChange = function(e) {\n    setDescriptcion(e.target.value);\n  }\n\n\n  const handleHoraChange = function(e) {\n    setHorario(e.target.value);\n  }\n\n  const handleDiaChange = function(e) {\n    setDia(e.target.value);\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setDisabled(true);\n    setNombre(\"\");\n    setDescriptcion(\"\");\n    setDestinatarios([]);\n    setDia(\"\");\n    setHorario(\"\");\n    setOpen(false);\n  };\n\n  const handleCreate = async () => {\n    let newReport = {\n      nombre: nombre,\n      descripcion: descripcion,\n      destinatarios: destinatarios,\n      dia: dia,\n      horario: horario\n    }\n\n    let res = await saveReport(props.dashboardId,newReport)\n    if (res.ok){\n      props.handleNewNotification(\"Reporte creado exitosamente\",\"success\")\n      let newUser = await res.json()\n      let userArr = [];\n      let localReport = props.reportList;\n      userArr[0] = newUser.nombre;\n      userArr[1] = newUser.descripcion;\n      userArr[2] = newUser.destinatarios.join(', ');\n      userArr[3] = newUser.dia;\n      userArr[4] = newUser.horario;\n      userArr[5] = newUser._id;\n\n      localReport.push(userArr)\n      props.setReportsData([])\n      props.setReportsData(localReport)\n     \n    } else {\n      props.handleNewNotification(\"No se pudo crear el reporte\",\"error\")\n    }\n    handleClose()\n  };\n\n  const handleDisable = () => {\n    if (!!nombre && !!descripcion && !!dia && !!horario && destinatarios.length>0){\n      setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n  },[]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n  },[destinatarios,nombre,descripcion,dia,horario]);\n\n\n  return (\n\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n        Agregar reporte\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo reporte</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"descripcion\"\n            label=\"Descripcion\"\n            fullWidth\n            onChange={handleDescriptionChange}\n          />\n          <TextField\n            id=\"outlined-select\"\n            margin=\"dense\"\n            select\n            label=\"Día\"\n            value={dia}\n            fullWidth\n            onChange={handleDiaChange}\n          >\n            {\n              days.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))\n            }\n          </TextField>\n\n          <FormControl fullWidth className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-chip-label\">Destinatarios</InputLabel>\n            <Select\n              labelId=\"demo-mutiple-chip-label\"\n              id=\"demo-mutiple-chip\"\n              multiple\n              fullWidth\n              value={destinatarios}\n              onChange={handleChange}\n              input={<Input id=\"select-multiple-chip\" />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}\n            >\n              {\n                props.destinatarios.map((name) => (\n                  <MenuItem key={name} value={name} style={getStyles(name, props.destinatarios, theme)}>\n                    {name}\n                  </MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n          <TextField\n            id=\"time\"\n            label=\"Horario\"\n            type=\"time\"\n            fullWidth\n            defaultValue=\"\"\n            className={classes.textField}\n            onChange={handleHoraChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputProps={{\n              step: 300, // 5 min\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Wrappers/Wrappers.js",["322"],"import React from \"react\";\nimport {\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles, withStyles } from \"@material-ui/styles\";\nimport { createStyles } from '@material-ui/core/styles';\n\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Creartablero/Creartablero.js",["323","324","325","326","327"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText\n} from \"@material-ui/core\";\nimport {saveDashboard} from '../../api/Api'\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [nombre, setNombre] = React.useState();\n  const [description, setDescription] = React.useState();\n  const [disable, setDisabled] = React.useState(true);\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleDescChange = function(e) {\n    setDescription(e.target.value);\n  }\n\n  const handleDisable = () => {\n    if (!!nombre && !!description){\n        setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setDescription(\"\")\n    setNombre(\"\")\n    setOpen(false);\n  };\n\n  const handleCreate = async () => {\n    let newUser = {\n      nombre: nombre,\n      descripcion: description,\n    }\n  \n    let res = await saveDashboard(newUser)\n    if (res.ok){\n      let newDash = await res.json()\n      props.setDashIds([newDash._id])\n      props.setActualBoard(newDash._id)\n      props.setDashboardList([newDash.nombre])\n      \n      handleClose()\n    }\n  \n  };\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n\n  },[]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n\n  },[description,nombre]);\n\n  return (\n\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n        Agregar tablero\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo tablero</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            placeholder=\"Descripción\"\n            type=\"description\"\n            fullWidth\n            onChange={handleDescChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/PageTitle/PageTitle.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Slider/Slider.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Table/CheckboxTable.js",["328","329","330","331","332","333","334"],"import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Button from '@material-ui/core/Button';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Chip from '@material-ui/core/Chip';\nimport useStyles from \"./styles\";\n\nimport {getObjetiveStatus} from \"../../api/Api\"\nimport {useInterval} from \"../../utils/customhooks\"\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'Nombre', numeric: false, disablePadding: true, label: 'Nombre' },\n  { id: 'Descripción', numeric: false, disablePadding: false, label: 'Descripción' },\n  { id: 'Indicador', numeric: false, disablePadding: false, label: 'Indicador' },\n  { id: 'Fecha Inicial', numeric: false, disablePadding: false, label: 'Fecha Inicial' },\n  { id: 'Fecha Final', numeric: false, disablePadding: false, label: 'Fecha Final' },\n  { id: 'Valor Esperado', numeric: false, disablePadding: false, label: 'Valor Esperado' },\n  { id: 'Valor actual', numeric: false, disablePadding: false, label: 'Valor Actual' },\n  { id: 'Estado', numeric: false, disablePadding: false, label: 'Estado' },\n\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell >\n          {/*props.isAdmin && <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}/>*/}\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n          Objetivos\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          startIcon={<DeleteIcon />}\n          onClick={props.handleDeleteObjetive}\n        >\n          Delete\n        </Button>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\n\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n\n  const rows = props.data\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState();\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDeleteObjetive = () => {\n    props.handleDeleteObjetive(selected)\n  }\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar handleDeleteObjetive={handleDeleteObjetive} numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              isAdmin={props.isAdmin}\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((data, index) => \n                   <RowCustom data={data} index={index} isSelected={isSelected} handleClick={handleClick} atualBoardId={props.atualBoardId}/>\n              )}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/*<FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />*/}\n    </div>\n  );\n}\n\nfunction RowCustom(props) {\n  const classes = useStyles();\n\n  const [status, setStatus] = React.useState();\n  const [actualValue, setActualValue] = React.useState();\n  let {_id,name,description,indicatorName,startDate,endDate,value} = props.data\n\n  const isItemSelected = props.isSelected(_id);\n  const labelId = `enhanced-table-checkbox-${props.index}`;\n\n  const handleFetchObjetiveStatus = async (atualBoardId,id) => {\n\n    let res = await getObjetiveStatus(atualBoardId,id)\n    console.log(\"RES\")\n      if (res.ok){\n        let data = await res.json()\n        setStatus(data.status)\n        setActualValue(data.valorActual)\n      }    \n  }\n\n  useEffect( () => { \n    async function getInitialData(){\n        await handleFetchObjetiveStatus(props.atualBoardId,props.data._id)\n    }\n    getInitialData()\n  },[]);\n\n  useInterval(() => { //custom hook\n    handleFetchObjetiveStatus(props.atualBoardId,props.data._id)\n  }, 60*1000);\n\n  return (\n    <TableRow\n      hover\n      onClick={(event) => props.handleClick(event, _id)}\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={_id}\n      selected={isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        { props.isAdmin && <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n        /> }\n      </TableCell>\n      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n        {name}\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{indicatorName}</TableCell>\n      <TableCell>{new Date(startDate).toLocaleDateString() + \" \" + new Date(startDate).toLocaleTimeString()}</TableCell>\n      <TableCell>{new Date(endDate).toLocaleDateString() + \" \" + new Date(endDate).toLocaleTimeString()}</TableCell>\n      <TableCell>{value}</TableCell>                        \n        {!!actualValue ? <TableCell>{actualValue}</TableCell> : <TableCell>-</TableCell>  }\n      <TableCell>\n        {!!status && <Chip label={status} classes={{root: classes[states[handleTranslate(status).toLowerCase()]]}}/>}\n      </TableCell>                     \n    </TableRow>\n  );\n}\n\nconst handleTranslate = (status) => {\n  if (status===\"pendiente\")\n    return \"Pending\"\n  if (status===\"no alcanzado\")\n    return \"Declined\"\n  if (status===\"alcanzado\")\n    return \"Sent\"\n}\n\nconst states = {\n  sent: \"success\",\n  pending: \"primary\",\n  declined: \"secondary\",\n};\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Widget/Widget.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/Dot.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/NoDashboards/NoDashboards.js",["335"],"import React from \"react\";\nimport {\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport SimpleModal from \"../Creartablero/Creartablero\"\n\nexport default function NoDashboard(props) {\n\n\n  return (\n    <>\n        <Box display=\"flex\" justifyContent=\"center\" m={0} p={15} >\n          <Box m=\"auto\">\n            {\n              props.isAdmin ? <PageTitle title=\"No hay ningun tablero disponible, comenzá creando uno.\"/> : <PageTitle title=\"No hay ningun tablero disponible.\"/>\n            } \n          </Box>\n        </Box>\n        <Box \n          display=\"flex\" \n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n        </Box>\n        {\n          props.isAdmin && <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\n            <SimpleModal setDashIds={props.setDashIds} setActualBoard={props.setActualBoard} setDashboardList={props.setDashboardList}/>\n          </Box> \n        } \n    </>\n  );\n}\n\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/SplitButton/SplitButton.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Table/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Widget/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/PageTitle/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Header/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/login/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/SidebarAdmin.js",["336"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  AccountBox as Users,\n  Home as HomeIcon,\n  BorderAll as TableIcon,\n  ArrowBack as ArrowBackIcon,\n  Receipt\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Inicio\", link: \"/app/dashboards\", icon: <HomeIcon /> },\n  {\n    id: 1, label: \"Tableros\", link: \"/app/tableros\", icon: <TableIcon /> \n    /*\n    id: 1,\n    label: \"Typography\",\n    link: \"/app/typography\",\n    icon: <TypographyIcon />,\n    */\n  },\n  { \n    id: 3, label: \"Usuarios\", link: \"/app/usuarios\", icon: <Users />\n    //id: 3, label: \"Indicadores\", link: \"/app/typography\", icon: <Indicadores />\n    /*id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon />*/\n  },\n/*{\n    //id: 4, label: \"Objetivos\", link: \"/app/icons\", icon: <Objetives />\n    //id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon />\n  },\n  {\n    //id: 5, label: \"Usuarios\", link: \"/app/charts\", icon: <Users />\n    id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon />\n  },\n  {\n    id: 3,\n    label: \"Notifications\",\n    link: \"/app/notifications\",\n    icon: <NotificationsIcon />,\n  },\n  {\n    id: 4,\n    label: \"UI Elements\",\n    link: \"/app/ui\",\n    icon: <UIElementsIcon />,\n    children: [\n      { label: \"Icons\", link: \"/app/ui/icons\" },\n      { label: \"Charts\", link: \"/app/ui/charts\" },\n      { label: \"Maps\", link: \"/app/ui/maps\" },\n    ],\n  },\n  { id: 5, type: \"divider\" },\n  { id: 6, type: \"title\", label: \"HELP\" },\n  { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\n  { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\n  { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\n  { id: 10, type: \"divider\" },\n  { id: 11, type: \"title\", label: \"PROJECTS\" },\n  {\n    id: 12,\n    label: \"My recent\",\n    link: \"\",\n    icon: <Dot size=\"small\" color=\"warning\" />,\n  },\n  {\n    id: 13,\n    label: \"Starred\",\n    link: \"\",\n    icon: <Dot size=\"small\" color=\"primary\" />,\n  },\n  {\n    id: 14,\n    label: \"Background\",\n    link: \"\",\n    icon: <Dot size=\"small\" color=\"secondary\" />,\n  },*/\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Notification/Notification.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/usuarios/Usuarios.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/tableros/Tableros.js",["337","338"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Box, Button, CircularProgress } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { getAllDashboardsData, deleteDashboards, getAllUsersData } from \"../../../api/Api\"\nimport SimpleModal from './creartablero/creartablero'\nimport Notification from \"../../../components/Popups/Notification\";\n\n\nexport default function Tableros() {\n\n  var [dashboardList, setDashboardList] = useState([]);\n  var [isLoading, setIsLoading] = useState(true);\n  var [notification, setNotifiaction] = useState();\n  var [notificationType, setNotifiactionType] = useState();\n  var [notificationMsg, setNotifiactionMsg] = useState();\n\n  const handleNewNotification = async (msg,type) => {\n    setNotifiactionType(type)\n    setNotifiactionMsg(msg)\n    setNotifiaction(true)\n  }\n\n  useEffect(() => { \n    async function automatedClose(){\n      if(notification)\n        await setTimeout(() => {setNotifiaction(false)} , 4000);\n        \n    }\n    automatedClose();\n\n  },[notification]);\n\n  async function fetchDashboardsData() {\n    try {\n      const res = await getAllDashboardsData()\n      const {data} = await res.json()\n      if (!!data) {\n        setDashboardList(data)\n      }\n      setIsLoading(false)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await fetchDashboardsData()\n    }\n    getInitialDashs();\n\n  },[]);\n\n  async function handleDeleteDashabords(dashboardToDelete) {\n    try {\n      var dashboardIndex = await Promise.all(dashboardToDelete.map(item => item.index))\n      var dashboasrdId = await Promise.all(dashboardIndex.map(index => dashboardList[index][3]))\n      await Promise.all(dashboasrdId.map(dashid => deleteDashboards(dashid)))\n\n      var filtered = dashboardList.filter(function(value,index){\n       return !dashboardIndex.includes(index)\n      })\n      console.log(filtered)\n\n      if(dashboardToDelete.length>1) {\n        handleNewNotification(\"Tableros borrados exitosamente\",\"success\")\n      } else {\n        handleNewNotification(\"Tablero borrado exitosamente\",\"success\")\n      }\n\n      setDashboardList(filtered)\n\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      {\n        isLoading ? \n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '80vh' }}\n        >\n        <Grid item xs={3}>\n          <CircularProgress size={100}/>\n        </Grid>   \n      </Grid> :\n      <div>\n       <Notification notificationMsg={notificationMsg} severity={notificationType} notification={notification} setNotifiaction={setNotifiaction}/>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              title={\n                    <Box display=\"flex\" justifyContent=\"flex-start\" m={0} p={0} >\n                      <SimpleModal handleNewNotification={handleNewNotification} dashboardList={dashboardList} setDashboardList={setDashboardList}/>\n                    </Box>\n                    }\n              data={dashboardList}\n              columns={[\"Nombre\", \"Descripción\", \"Fecha de creacion\"]}\n              options={{\n                filterType: \"checkbox\",\n                print: false,\n                download: false,\n                viewColumns: false,\n                onRowsDelete: (rowsDeleted, newTableData) => {  \n                  return handleDeleteDashabords(rowsDeleted.data)\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n\n      </div>\n    }\n    </>\n  );\n}\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Notification/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/usuarios/crearusuario/crearusuario.js",["339","340","341","342","343"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/styles';\nimport {saveUser} from '../../../../api/Api'\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText,\n    MenuItem\n} from \"@material-ui/core\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst currencies = [\n  {\n    value: 'admin',\n    label: 'Admin',\n  },\n  {\n    value: 'user',\n    label: 'User',\n  },\n\n];\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [nombre, setNombre] = React.useState();\n  const [mail, setMail] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [repassword, setRePassword] = React.useState();\n  const [errorvalidate, setValidate] = React.useState(false);\n  const [rol, setRol] = React.useState();\n  const [disable, setDisabled] = React.useState(true);\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleMailChange = function(e) {\n    setMail(e.target.value);\n  }\n\n  const handlePassChange = function(e) {\n    setPassword(e.target.value);\n  }\n\n  const handleRepassChange = function(e) {\n    setRePassword(e.target.value);\n  }\n\n  const handleValidatePass = function() {\n    setValidate(password!==repassword)\n  }\n\n  const handleRolChange = function(e) {\n    setRol(e.target.value);\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setDisabled(true);\n    setNombre(\"\");\n    setMail(\"\");\n    setPassword(\"\");\n    setRePassword(\"\");\n    setValidate(false)\n    setRol(\"\")\n    setOpen(false);\n  };\n\n  const handleCreate = async () => {\n    let newUser = {\n      mail: mail,\n      nombre: nombre,\n      rol: rol,\n      password: password,\n    }\n\n    let res = await saveUser(newUser)\n    if (res.ok){\n      props.handleNewNotification(\"Usuario creado exitosamente\",\"success\")\n\n      let newUser = await res.json()\n      let userArr = [];\n      let localUser = props.userList;\n      userArr[0] = newUser.mail;\n      userArr[1] = newUser.nombre;\n      userArr[2] = newUser.rol;\n      userArr[3] = newUser.fecha_creacion;\n      userArr[4] = newUser.ultimo_login;\n      userArr[5] = newUser._id;\n\n      localUser.push(userArr)\n      props.setUserList([])\n      props.setUserList(localUser)\n      \n    } else {\n      props.handleNewNotification(\"No se pudo crear el reporte\",\"error\")\n\n    }\n    handleClose()\n\n  };\n\n  const handleDisable = () => {\n    if (!errorvalidate && !!nombre && !!mail && !!password && !!repassword && !!rol){\n      setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n\n  },[]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n  },[mail,nombre,password,repassword,rol]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function validatepass(){\n      await handleValidatePass()\n    }\n    validatepass();\n\n  },[password,repassword]);\n\n  return (\n\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n        Agregar usuario\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo usuario</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"mail\"\n            label=\"Mail\"\n            type=\"mail\"\n            fullWidth\n            onChange={handleMailChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            fullWidth\n            onChange={handlePassChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"outlined-password-input\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            fullWidth\n            error={errorvalidate}\n            onChange={handleRepassChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"outlined-tel\"\n            label=\"Télefono\"\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            id=\"outlined-select\"\n            margin=\"dense\"\n            select\n            label=\"Rol\"\n            value={rol}\n            fullWidth\n            onChange={handleRolChange}\n          >\n            {currencies.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/pages/admin/tableros/creartablero/creartablero.js",["344","345","346","347","348"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { \n    Button, \n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogContentText\n} from \"@material-ui/core\";\nimport {saveDashboard} from '../../../../api/Api'\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [nombre, setNombre] = React.useState();\n  const [description, setDescription] = React.useState();\n  const [disable, setDisabled] = React.useState(true);\n\n  const handleNameChange = function(e) {\n    setNombre(e.target.value);\n  }\n\n  const handleDescChange = function(e) {\n    setDescription(e.target.value);\n  }\n\n  const handleDisable = () => {\n    if (!!nombre && !!description){\n        setDisabled(false)\n    } else {\n      setDisabled(true)\n    }\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setDescription(\"\")\n    setNombre(\"\")\n    setOpen(false);\n  };\n\n  const handleCreate = async () => {\n    let newUser = {\n      nombre: nombre,\n      descripcion: description,\n    }\n  \n    let res = await saveDashboard(newUser)\n    if (res.ok){\n      props.handleNewNotification(\"Tablero creado exitosamente\",\"success\")\n      let newDash = await res.json()\n      let dashArr = [];\n      let localDash = props.dashboardList;\n      dashArr[0] = newDash.nombre;\n      dashArr[1] = newDash.descripcion;\n      dashArr[2] = newDash.fecha_creacion;\n      dashArr[3] = newDash._id;\n  \n      localDash.push(dashArr)\n      props.setDashboardList([])\n      props.setDashboardList(localDash)\n      \n    } else {\n      props.handleNewNotification(\"No se pudo crear el reporte\",\"error\")\n\n    }\n    handleClose()\n\n  };\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function getInitialDashs(){\n      await getModalStyle()\n    }\n    getInitialDashs();\n\n  },[]);\n\n  useEffect(() => { //tiene que haber un useEffect por cada variable de estado de chart a modificar\n    async function disable(){\n      await handleDisable()\n    }\n    disable();\n\n  },[description,nombre]);\n\n  return (\n\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n        Agregar tablero\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Nuevo tablero</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            ****\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nombre\"\n            type=\"name\"\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Descripción\"\n            type=\"description\"\n            fullWidth\n            onChange={handleDescChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\" disabled={disable}>\n            Crear\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Sidebar/components/SidebarLink/styles.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/utils/utils.js",[],"/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/SimpleRadarChart.js",["349","350","351","352"],"import React, { useState, useEffect } from \"react\";\nimport { \n  Radar,\n  RadarChart, \n  PolarGrid, \n  PolarAngleAxis, \n  PolarRadiusAxis, \n  ResponsiveContainer,\n  Tooltip\n} from 'recharts';\nimport Widget from \"../Widget/Widget\";\nimport {\n  Grid,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport useStyles from \"./styles\";\nimport {getIndicatorData} from '../../api/Api'\n\nconst mockData = [\n  {\n    \"id_sensor\": \"611b57e1113636bf060a9c2c\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"2021-08-17T07:07:01.607000Z\",\n        \"valor\": 8.1\n      }\n    ]\n  },\n  {\n    \"id_sensor\": \"611b57e1113636bf060a9c2d\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"2021-08-17T07:02:01.607000Z\",\n        \"valor\": 8.5\n      }\n    ]\n  },\n  {\n    \"id_sensor\": \"6138248f2b7c83edbac83e75\",\n    \"unidad\": \"porcentaje\",\n    \"valores\": [\n      {\n        \"fecha\": \"2021-08-17T06:57:01.607000Z\",\n        \"valor\": 9.1\n      }\n    ]\n  }\n]\n\nconst data = [\n  {\n    subject: 'Math',\n    A: 120,\n    B: 110,\n    fullMark: 150,\n  },\n  {\n    subject: 'Chinese',\n    A: 98,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: 'English',\n    A: 86,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: 'Geography',\n    A: 198,\n    B: 190,\n    fullMark: 150,\n  },\n  {\n    subject: 'Physics',\n    A: 85,\n    B: 90,\n    fullMark: 150,\n  },\n  {\n    subject: 'History',\n    A: 65,\n    B: 85,\n    fullMark: 150,\n  },\n];\n\nexport default function SimpleRadarChart(props) {\n  var classes = useStyles();\n\n  var theme = useTheme();\n  var [sensData, setData] = useState();\n  \n  const handleDeleteIndicator = () => {\n    props.handleDeleteIndicator(props.indicator._id)\n  }\n\n  const handleSetHistoric = () => {\n    props.setHistoricIndicator(props.indicator)\n    props.setHistoric(true)\n  }\n\n  const handleFetchIndicatorData = async (muestras) => {\n    let res = await getIndicatorData(props.atualBoardId,props.indicator._id,muestras)\n    console.log(res)\n      if (res.ok){\n\n        let data = await res.json()\n        console.log(data)\n        setData(data)\n      }    \n  }\n\n  useEffect(() => { \n    async function getInitialData(){\n        await handleFetchIndicatorData(5)\n    }\n    getInitialData();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return <Grid item lg={3} md={6} sm={6} xs={12}>\n        <Widget\n          handleDeleteIndicator={handleDeleteIndicator}\n          setHistoric={handleSetHistoric}\n          title={props.indicator.name}\n          upperTitle\n          className={classes.card}\n          bodyClass={classes.fullHeightBody}\n        >\n\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={mockData}>\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"id_sensor\" />\n              <PolarRadiusAxis orientation=\"left\"/>\n              <Radar label={true} name=\"prod/Hs\" dataKey=\"valores[0].valor\" fill={theme.palette.error.main} fillOpacity={1} />\n              <Tooltip isAnimationActive={false}/>\n            </RadarChart>\n          </ResponsiveContainer>\n          </Widget>\n      </Grid>\n\n}\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  var classes = useStyles();\n\n  if (active && payload && payload.length) {\n    return (\n      <div className={classes.widgetWrapper}>\n        <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/components/Graphs/CircularGraphCustom.js",["353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Sector,\n  Tooltip\n} from \"recharts\";\n// styles\nimport useStyles from \"./styles\";\nimport {getIndicatorData} from '../../api/Api'\nimport {handleLineColor} from \"../../utils/utils\"\n\n// components\n\nimport Dot from \"../Sidebar/components/Dot\";\nimport Widget from \"../Widget/Widget\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Producto A\", value: 400, color: \"primary\", fecha: \"19:00\"},\n  { name: \"Producto B\", value: 300, color: \"secondary\", fecha: \"19:00\"},\n  { name: \"Producto C\", value: 300, color: \"warning\", fecha: \"19:00\"},\n  { name: \"Producto D\", value: 200, color: \"success\", fecha: \"19:00\"},\n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {/*payload.name*/}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      {/*<path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>*/}\n    </g>\n  );\n};\n\nexport default function CircularGraphCustom(props) {\n    var classes = useStyles();\n    var theme = useTheme();\n    const [activeIndex,setActiveIndex] = useState(0);\n\n    const onPieEnter = (_,index) => {\n      setActiveIndex(index)\n    }\n\n    const handleDeleteIndicator = () => {\n      props.handleDeleteIndicator(props.indicator._id)\n    }\n\n    const handleSetHistoric = () => {\n      props.setHistoricIndicator(props.indicator)\n      props.setHistoric(true)\n    }\n\n    const handleFetchIndicatorData = async () => {\n      let res = await getIndicatorData(props.atualBoardId,props.indicator._id,1)\n      if (res.ok){\n        let data = await res.json()\n      }\n    }\n\n    useEffect(() => { \n      async function getInitialData(){\n          await handleFetchIndicatorData()\n      }\n      //getInitialData();\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    \n    return (\n    <Grid item lg={3} md={4} sm={6} xs={12}>\n      <Widget \n        title={props.indicator.name}\n        upperTitle \n        className={classes.card}\n        setHistoric={handleSetHistoric}\n        handleDeleteIndicator={handleDeleteIndicator}\n        >\n       <div>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart width={400} height={400}>\n                <Pie\n                  activeIndex={activeIndex}\n                  activeShape={renderActiveShape}\n                  data={PieChartData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={0}\n                  outerRadius={40}\n                  dataKey=\"value\"\n                  onMouseEnter={onPieEnter}\n                >\n                {PieChartData.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={handleLineColor(theme,props.indicator,PieChartData.value)}\n                    />\n                  ))}\n                </Pie>\n              </PieChart>\n            </ResponsiveContainer>\n        </div>\n      </Widget>\n\n    </Grid>\n    );\n}\n\n\n    function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n        var array = new Array(length).fill();\n        let lastValue;\n      \n        return array.map((item, index) => {\n          let randomValue = Math.floor(Math.random() * multiplier + 1);\n      \n          while (\n            randomValue <= min ||\n            randomValue >= max ||\n            (lastValue && randomValue - lastValue > maxDiff)\n          ) {\n            randomValue = Math.floor(Math.random() * multiplier + 1);\n          }\n      \n          lastValue = randomValue;\n      \n          return { value: randomValue };\n        });\n      }\n      \n\n      function getMainChartData() {\n        var resultArray = [];\n        var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n        var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n        var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n      \n        for (let i = 0; i < tablet.length; i++) {\n          resultArray.push({\n            tablet: tablet[i].value,\n            desktop: desktop[i].value,\n            mobile: mobile[i].value,\n          });\n        }\n      \n        return resultArray;\n      }","/mnt/hdd/ubuntu/paniaton/workspace/UTN-sensorial-front/src/utils/customhooks.js",["367","368"],"import React, { useState, useEffect, useRef } from \"react\";\n\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n  \n    useEffect(() => {\n      savedCallback.current = callback;\n    });\n  \n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n  \n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }, [delay]);\n}\n\nexport {\n    useInterval\n}",{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":26},{"ruleId":"373","severity":1,"message":"377","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"378","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":14},{"ruleId":"373","severity":1,"message":"379","line":11,"column":7,"nodeType":"375","messageId":"376","endLine":11,"endColumn":16},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"380","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"381","line":63,"column":10,"nodeType":"375","messageId":"376","endLine":63,"endColumn":19},{"ruleId":"373","severity":1,"message":"382","line":91,"column":7,"nodeType":"375","messageId":"376","endLine":91,"endColumn":14},{"ruleId":"373","severity":1,"message":"383","line":107,"column":9,"nodeType":"375","messageId":"376","endLine":107,"endColumn":14},{"ruleId":"373","severity":1,"message":"384","line":110,"column":10,"nodeType":"375","messageId":"376","endLine":110,"endColumn":20},{"ruleId":"373","severity":1,"message":"385","line":115,"column":10,"nodeType":"375","messageId":"376","endLine":115,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":214,"column":5,"nodeType":"388","endLine":214,"endColumn":20,"suggestions":"389"},{"ruleId":"386","severity":1,"message":"390","line":222,"column":5,"nodeType":"388","endLine":222,"endColumn":61,"suggestions":"391"},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"380","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"392","line":13,"column":5,"nodeType":"375","messageId":"376","endLine":13,"endColumn":9},{"ruleId":"373","severity":1,"message":"393","line":16,"column":23,"nodeType":"375","messageId":"376","endLine":16,"endColumn":37},{"ruleId":"373","severity":1,"message":"384","line":60,"column":10,"nodeType":"375","messageId":"376","endLine":60,"endColumn":20},{"ruleId":"386","severity":1,"message":"390","line":179,"column":5,"nodeType":"388","endLine":179,"endColumn":70,"suggestions":"394"},{"ruleId":"373","severity":1,"message":"395","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":24},{"ruleId":"373","severity":1,"message":"396","line":18,"column":8,"nodeType":"375","messageId":"376","endLine":18,"endColumn":27},{"ruleId":"386","severity":1,"message":"397","line":48,"column":5,"nodeType":"388","endLine":48,"endColumn":7,"suggestions":"398"},{"ruleId":"373","severity":1,"message":"378","line":3,"column":3,"nodeType":"375","messageId":"376","endLine":3,"endColumn":9},{"ruleId":"373","severity":1,"message":"399","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":19},{"ruleId":"373","severity":1,"message":"400","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":11},{"ruleId":"373","severity":1,"message":"401","line":6,"column":69,"nodeType":"375","messageId":"376","endLine":6,"endColumn":75},{"ruleId":"373","severity":1,"message":"400","line":15,"column":8,"nodeType":"375","messageId":"376","endLine":15,"endColumn":11},{"ruleId":"373","severity":1,"message":"402","line":17,"column":10,"nodeType":"375","messageId":"376","endLine":17,"endColumn":20},{"ruleId":"373","severity":1,"message":"403","line":18,"column":9,"nodeType":"375","messageId":"376","endLine":18,"endColumn":24},{"ruleId":"373","severity":1,"message":"404","line":20,"column":7,"nodeType":"375","messageId":"376","endLine":20,"endColumn":11},{"ruleId":"373","severity":1,"message":"405","line":99,"column":11,"nodeType":"375","messageId":"376","endLine":99,"endColumn":14},{"ruleId":"373","severity":1,"message":"406","line":1,"column":38,"nodeType":"375","messageId":"376","endLine":1,"endColumn":44},{"ruleId":"407","severity":1,"message":"408","line":52,"column":93,"nodeType":"409","messageId":"410","endLine":52,"endColumn":95},{"ruleId":"386","severity":1,"message":"411","line":69,"column":9,"nodeType":"388","endLine":69,"endColumn":11,"suggestions":"412"},{"ruleId":"373","severity":1,"message":"413","line":21,"column":3,"nodeType":"375","messageId":"376","endLine":21,"endColumn":7},{"ruleId":"373","severity":1,"message":"400","line":33,"column":8,"nodeType":"375","messageId":"376","endLine":33,"endColumn":11},{"ruleId":"373","severity":1,"message":"414","line":95,"column":9,"nodeType":"375","messageId":"376","endLine":95,"endColumn":13},{"ruleId":"373","severity":1,"message":"415","line":100,"column":25,"nodeType":"375","messageId":"376","endLine":100,"endColumn":39},{"ruleId":"386","severity":1,"message":"416","line":134,"column":7,"nodeType":"388","endLine":134,"endColumn":9,"suggestions":"417"},{"ruleId":"373","severity":1,"message":"403","line":17,"column":9,"nodeType":"375","messageId":"376","endLine":17,"endColumn":24},{"ruleId":"373","severity":1,"message":"400","line":22,"column":8,"nodeType":"375","messageId":"376","endLine":22,"endColumn":11},{"ruleId":"373","severity":1,"message":"418","line":26,"column":7,"nodeType":"375","messageId":"376","endLine":26,"endColumn":20},{"ruleId":"373","severity":1,"message":"419","line":204,"column":16,"nodeType":"375","messageId":"376","endLine":204,"endColumn":31},{"ruleId":"373","severity":1,"message":"413","line":7,"column":5,"nodeType":"375","messageId":"376","endLine":7,"endColumn":9},{"ruleId":"373","severity":1,"message":"420","line":8,"column":5,"nodeType":"375","messageId":"376","endLine":8,"endColumn":14},{"ruleId":"373","severity":1,"message":"421","line":15,"column":5,"nodeType":"375","messageId":"376","endLine":15,"endColumn":18},{"ruleId":"373","severity":1,"message":"422","line":24,"column":10,"nodeType":"375","messageId":"376","endLine":24,"endColumn":29},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"423","line":3,"column":21,"nodeType":"375","messageId":"376","endLine":3,"endColumn":36},{"ruleId":"373","severity":1,"message":"384","line":133,"column":10,"nodeType":"375","messageId":"376","endLine":133,"endColumn":20},{"ruleId":"386","severity":1,"message":"390","line":231,"column":5,"nodeType":"388","endLine":231,"endColumn":51,"suggestions":"424"},{"ruleId":"373","severity":1,"message":"425","line":8,"column":10,"nodeType":"375","messageId":"376","endLine":8,"endColumn":22},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"380","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"426","line":43,"column":9,"nodeType":"375","messageId":"376","endLine":43,"endColumn":16},{"ruleId":"373","severity":1,"message":"384","line":45,"column":10,"nodeType":"375","messageId":"376","endLine":45,"endColumn":20},{"ruleId":"386","severity":1,"message":"390","line":109,"column":5,"nodeType":"388","endLine":109,"endColumn":25,"suggestions":"427"},{"ruleId":"373","severity":1,"message":"428","line":20,"column":8,"nodeType":"375","messageId":"376","endLine":20,"endColumn":24},{"ruleId":"373","severity":1,"message":"429","line":21,"column":8,"nodeType":"375","messageId":"376","endLine":21,"endColumn":14},{"ruleId":"373","severity":1,"message":"430","line":70,"column":20,"nodeType":"375","messageId":"376","endLine":70,"endColumn":36},{"ruleId":"373","severity":1,"message":"431","line":70,"column":54,"nodeType":"375","messageId":"376","endLine":70,"endColumn":65},{"ruleId":"373","severity":1,"message":"432","line":70,"column":67,"nodeType":"375","messageId":"376","endLine":70,"endColumn":75},{"ruleId":"373","severity":1,"message":"433","line":248,"column":9,"nodeType":"375","messageId":"376","endLine":248,"endColumn":26},{"ruleId":"386","severity":1,"message":"434","line":335,"column":5,"nodeType":"388","endLine":335,"endColumn":7,"suggestions":"435"},{"ruleId":"373","severity":1,"message":"378","line":3,"column":3,"nodeType":"375","messageId":"376","endLine":3,"endColumn":9},{"ruleId":"373","severity":1,"message":"436","line":8,"column":3,"nodeType":"375","messageId":"376","endLine":8,"endColumn":10},{"ruleId":"373","severity":1,"message":"378","line":2,"column":21,"nodeType":"375","messageId":"376","endLine":2,"endColumn":27},{"ruleId":"373","severity":1,"message":"423","line":4,"column":50,"nodeType":"375","messageId":"376","endLine":4,"endColumn":65},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"426","line":55,"column":9,"nodeType":"375","messageId":"376","endLine":55,"endColumn":16},{"ruleId":"373","severity":1,"message":"384","line":57,"column":10,"nodeType":"375","messageId":"376","endLine":57,"endColumn":20},{"ruleId":"386","severity":1,"message":"390","line":161,"column":5,"nodeType":"388","endLine":161,"endColumn":42,"suggestions":"437"},{"ruleId":"386","severity":1,"message":"438","line":169,"column":5,"nodeType":"388","endLine":169,"endColumn":26,"suggestions":"439"},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"380","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":13},{"ruleId":"373","severity":1,"message":"426","line":43,"column":9,"nodeType":"375","messageId":"376","endLine":43,"endColumn":16},{"ruleId":"373","severity":1,"message":"384","line":45,"column":10,"nodeType":"375","messageId":"376","endLine":45,"endColumn":20},{"ruleId":"386","severity":1,"message":"390","line":120,"column":5,"nodeType":"388","endLine":120,"endColumn":25,"suggestions":"440"},{"ruleId":"373","severity":1,"message":"441","line":14,"column":3,"nodeType":"375","messageId":"376","endLine":14,"endColumn":17},{"ruleId":"373","severity":1,"message":"404","line":53,"column":7,"nodeType":"375","messageId":"376","endLine":53,"endColumn":11},{"ruleId":"373","severity":1,"message":"442","line":96,"column":8,"nodeType":"375","messageId":"376","endLine":96,"endColumn":16},{"ruleId":"373","severity":1,"message":"443","line":151,"column":7,"nodeType":"375","messageId":"376","endLine":151,"endColumn":20},{"ruleId":"373","severity":1,"message":"444","line":12,"column":3,"nodeType":"375","messageId":"376","endLine":12,"endColumn":10},{"ruleId":"373","severity":1,"message":"400","line":21,"column":8,"nodeType":"375","messageId":"376","endLine":21,"endColumn":11},{"ruleId":"373","severity":1,"message":"402","line":23,"column":10,"nodeType":"375","messageId":"376","endLine":23,"endColumn":20},{"ruleId":"373","severity":1,"message":"418","line":25,"column":7,"nodeType":"375","messageId":"376","endLine":25,"endColumn":20},{"ruleId":"373","severity":1,"message":"445","line":35,"column":83,"nodeType":"375","messageId":"376","endLine":35,"endColumn":90},{"ruleId":"373","severity":1,"message":"446","line":35,"column":92,"nodeType":"375","messageId":"376","endLine":35,"endColumn":99},{"ruleId":"373","severity":1,"message":"447","line":35,"column":101,"nodeType":"375","messageId":"376","endLine":35,"endColumn":106},{"ruleId":"373","severity":1,"message":"448","line":38,"column":9,"nodeType":"375","messageId":"376","endLine":38,"endColumn":11},{"ruleId":"373","severity":1,"message":"449","line":39,"column":9,"nodeType":"375","messageId":"376","endLine":39,"endColumn":11},{"ruleId":"373","severity":1,"message":"450","line":42,"column":9,"nodeType":"375","messageId":"376","endLine":42,"endColumn":11},{"ruleId":"373","severity":1,"message":"451","line":43,"column":9,"nodeType":"375","messageId":"376","endLine":43,"endColumn":11},{"ruleId":"373","severity":1,"message":"452","line":44,"column":9,"nodeType":"375","messageId":"376","endLine":44,"endColumn":19},{"ruleId":"373","severity":1,"message":"404","line":100,"column":13,"nodeType":"375","messageId":"376","endLine":100,"endColumn":17},{"ruleId":"373","severity":1,"message":"453","line":105,"column":22,"nodeType":"375","messageId":"376","endLine":105,"endColumn":36},{"ruleId":"373","severity":1,"message":"454","line":1,"column":8,"nodeType":"375","messageId":"376","endLine":1,"endColumn":13},{"ruleId":"373","severity":1,"message":"377","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},"no-native-reassign",["455"],"no-negated-in-lhs",["456"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'useStyles' is assigned a value but never used.","'Modal' is defined but never used.","'getStyles' is defined but never used.","'limites' is assigned a value but never used.","'theme' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'sensorsId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFetchSensores'. Either include it or remove the dependency array.","ArrayExpression",["457"],"React Hook useEffect has a missing dependency: 'handleDisable'. Either include it or remove the dependency array.",["458"],"'Grid' is defined but never used.","'deleteObjetivo' is defined but never used.",["459"],"'SimpleRadarChart' is defined but never used.","'CircularGraphCustom' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDashboardReports'. Either include it or remove the dependency array.",["460"],"'SimpleModal' is defined but never used.","'Dot' is defined but never used.","'Legend' is defined but never used.","'Typography' is defined but never used.","'handleLineColor' is defined but never used.","'data' is assigned a value but never used.","'max' is assigned a value but never used.","'useRef' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'handleFetchIndicatorData'. Either include it or remove the dependency array.",["461"],"'Area' is defined but never used.","'date' is assigned a value but never used.","'setGranularity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleRefresh'. Either include it or remove the dependency array.",["462"],"'mainChartData' is assigned a value but never used.","'CustomizedLabel' is defined but never used.","'AreaChart' is defined but never used.","'CartesianGrid' is defined but never used.","'LocalPrintshopSharp' is defined but never used.","'getAllUsersData' is defined but never used.",["463"],"'createStyles' is defined but never used.","'classes' is assigned a value but never used.",["464"],"'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.atualBoardId' and 'props.data._id'. Either include them or remove the dependency array.",["465"],"'Receipt' is defined but never used.",["466"],"React Hook useEffect has a missing dependency: 'handleValidatePass'. Either include it or remove the dependency array.",["467"],["468"],"'LinearProgress' is defined but never used.","'sensData' is assigned a value but never used.","'CustomTooltip' is assigned a value but never used.","'Tooltip' is defined but never used.","'payload' is assigned a value but never used.","'percent' is assigned a value but never used.","'value' is assigned a value but never used.","'sx' is assigned a value but never used.","'sy' is assigned a value but never used.","'ex' is assigned a value but never used.","'ey' is assigned a value but never used.","'textAnchor' is assigned a value but never used.","'getInitialData' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"483","fix":"491"},"Update the dependencies array to be: [handleFetchSensores, tipoIndicador]",{"range":"492","text":"493"},"Update the dependencies array to be: [nombre, tipoIndicador, selectedSensors, superior, inferior, handleDisable]",{"range":"494","text":"495"},"Update the dependencies array to be: [description, nombre, objValue, endDate, startDate, endTime, startTime, handleDisable]",{"range":"496","text":"497"},"Update the dependencies array to be: [fetchDashboardReports]",{"range":"498","text":"499"},"Update the dependencies array to be: [handleFetchIndicatorData]",{"range":"500","text":"501"},"Update the dependencies array to be: [handleRefresh]",{"range":"502","text":"503"},"Update the dependencies array to be: [destinatarios, nombre, descripcion, dia, horario, handleDisable]",{"range":"504","text":"505"},"Update the dependencies array to be: [description, handleDisable, nombre]",{"range":"506","text":"507"},"Update the dependencies array to be: [props.atualBoardId, props.data._id]",{"range":"508","text":"509"},"Update the dependencies array to be: [handleDisable, mail, nombre, password, repassword, rol]",{"range":"510","text":"511"},"Update the dependencies array to be: [handleValidatePass, password, repassword]",{"range":"512","text":"513"},{"range":"514","text":"507"},[4921,4936],"[handleFetchSensores, tipoIndicador]",[5124,5180],"[nombre, tipoIndicador, selectedSensors, superior, inferior, handleDisable]",[4559,4624],"[description, nombre, objValue, endDate, startDate, endTime, startTime, handleDisable]",[1274,1276],"[fetchDashboardReports]",[1881,1883],"[handleFetchIndicatorData]",[3394,3396],"[handleRefresh]",[5089,5135],"[destinatarios, nombre, descripcion, dia, horario, handleDisable]",[2526,2546],"[description, handleDisable, nombre]",[10753,10755],"[props.atualBoardId, props.data._id]",[3704,3741],"[handleDisable, mail, nombre, password, repassword, rol]",[3944,3965],"[handleValidatePass, password, repassword]",[2888,2908]]